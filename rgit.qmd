---
title: "Using Github with Quarto and Virtual Environments"
---

Adapted from [Source](https://support.posit.co/hc/en-us/articles/360023654474-Installing-and-Configuring-Python-with-RStudio)

#### Step 1. Set up Git in RStudio [link](https://docs.posit.co/ide/user/ide/guide/tools/version-control.html)

Go to Tools --> Version Control --> Project Setup

Once a Version Control system has been installed, it needs to be activated on the system by following these steps:
- From the Tools menu, click Global Options
- Click on the Git/SVN tab
- Click Enable version control interface for RStudio projects
- If necessary, enter the path for the Git or SVN executable where provided. A SSH key can be created or added for SSH if necessary.

#### Step 2. Github Personal Action Token (PAT) [link](https://happygitwithr.com/https-pat.html)

- Go to https://github.com/settings/tokens and click Generate Token.
- Or, from R do: 'usethis::create_github_token()'
- Click “Generate token”
- Copy the generated PAT to your clipboard. Or leave that browser window open and available for a little while, so you can come back to copy the PAT. Provide this PAT next time a Git operation asks for your password.
- You could even get out ahead of this and store the PAT explicitly right now. In R, call gitcreds::gitcreds_set() to get a prompt where you can paste your PAT.






#### Step 1. Using Virtual Environments with Quarto and Github

For Git users, in order to track project dependencies, continue below:

- While in the virtual environment, start by installing a package. For this example we will use pandas. Run pip install pandas
- Run deactivate to stop the virtual environment
- Initialize the repo by running git init
- Run echo ‘env' > .gitignore to include the env folder in the .gitignore file so the virtual environment is ignored in source control
- Run pip freeze > requirements.txt to place the dependencies in a text file to be committed. Freezing reads all the installed dependencies and then produces a text file with the name of the dependency and the installed version number.
- Run git add requirements.txt to check the file into source control.
- Commit the files and push to a repo.
    pip install virtualenv

#### Step 2. Create a Python environment in your project

It is recommended that you use one virtual environment per project, similar to how packrat is used to manage R packages within a project. Navigate into your RStudio project directory by using the following command:

    cd <project-dir>

Create a new virtual environment in a folder called my_env within your project directory using the following command:

    virtualenv quarto_env

#### Step 3. Activate your Python environment

You can activate the virtualenv in your project using the following command in a terminal:

    source my_env/bin/activate

You can verify that you have activated the correct version of Python using the following command in a terminal:

    which python

#### Step 4. Install Python packages in your environment

You can install Python packages such as numpy, pandas, matplotlib, and other packages in your Python virtualenv by using pip install using the following command in a terminal:

    pip install numpy pandas matplotlib

    pip install jupyter

#### Step 5. Install and configure reticulate to use your Python version

Install and configure reticulate to use your Python version

    install.packages("reticulate")

To configure reticulate to point to the Python executable in your virtualenv, create a file in your project directory called .Renviron with the following contents:

    RETICULATE_PYTHON=quarto_env/bin/python

You'll need to restart your R session for the setting to take effect. You can verify that reticulate is configured for the correct version of Python using the following command in your R console:

    reticulate::py_config()

#### Step 6. Publish a project to RStudio Connect

Create a markdown file with a title and source. You can then render your quarto markdown file to publish file.

    ---
    title: "Lecture 2"
    jupyter: python3

    ---
